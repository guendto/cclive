.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "cclive 1"
.TH cclive 1 "2011-05-22" "0.7.4" "cclive manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cclive \- media download tool
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
cclive [options] [url | file...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
cclive is a tool for downloading media from YouTube and similar
websites. It has a low memory footprint compared to other existing
tools.
.SH "HISTORY"
.IX Header "HISTORY"
cclive is a rewrite of \f(CWclive(1)\fR in \*(C+.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Print version and exit.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Print help and exit.
.IP "\fB\-\-license\fR" 4
.IX Item "--license"
Print license and exit.
.IP "\fB\-\-support\fR" 4
.IX Item "--support"
Print supported websites, formats and exit.
.IP "\fB\-\-verbose\-libcurl\fR" 4
.IX Item "--verbose-libcurl"
Turn on libcurl verbose output.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Turn off all output to stdout and stderr.
.IP "\fB\-b, \-\-background\fR" 4
.IX Item "-b, --background"
Go to background after startup. Output will be written to
the file specified with \f(CW\*(C`\-\-log\-file\*(C'\fR.
.IP "\fB\-f, \-\-format\fR \fIarg\fR (=default)" 4
.IX Item "-f, --format arg (=default)"
Download \fIarg\fR format of the media. The \fIarg\fR may be \f(CW\*(C`help\*(C'\fR.
.IP "\fB\-c, \-\-continue\fR" 4
.IX Item "-c, --continue"
Resume partially downloaded media.
.IP "\fB\-W, \-\-overwrite\fR" 4
.IX Item "-W, --overwrite"
Overwrite existing media.
.IP "\fB\-O, \-\-output\-file\fR \fIarg\fR" 4
.IX Item "-O, --output-file arg"
Write media to \fIarg\fR. Overrides \f(CW\*(C`\-\-filename\-format\*(C'\fR.
.IP "\fB\-n, \-\-no\-download\fR" 4
.IX Item "-n, --no-download"
Do not download the media, print details only.
.IP "\fB\-r, \-\-no\-resolve\fR" 4
.IX Item "-r, --no-resolve"
Do not resolve \s-1HTTP\s0 redirections to another location.
.Sp
\&\s-1URL\s0 shortening services typically require following an \s-1HTTP\s0 redirection
to another location. If this switch is used, cclive will no longer work
with such services.
.Sp
Available only if cclive was compiled with quvi 0.2.16+, this switch
deprecates the \f(CW\*(C`\-\-no\-shortened\*(C'\fR switch found in earlier cclive
versions.
.IP "\fB\-s, \-\-no\-shortened\fR (deprecated)" 4
.IX Item "-s, --no-shortened (deprecated)"
Do not \*(L"decompress\*(R" shortened URLs before using them. Available only
if cclive was compiled with quvi 0.2.8 \- 0.2.15. Use \f(CW\*(C`\-\-no\-resolve\*(C'\fR
instead.
.IP "\fB\-\-no\-proxy\fR" 4
.IX Item "--no-proxy"
Disable use of \s-1HTTP\s0 proxy. Overrides both \f(CW\*(C`\-\-proxy\*(C'\fR and http_proxy environment
settings.
.IP "\fB\-\-log\-file\fR \fIarg\fR (=cclive_log)" 4
.IX Item "--log-file arg (=cclive_log)"
Write log data to \fIarg\fR file. Ignored unless used with \f(CW\*(C`\-\-background\*(C'\fR.
Overwrites the existing \fIarg\fR file (if any).
.Sp
See also \f(CW\*(C`\-\-background\*(C'\fR and \f(CW\*(C`\-\-update\-interval\*(C'\fR.
.IP "\fB\-\-update\-interval\fR \fIarg\fR (=1)" 4
.IX Item "--update-interval arg (=1)"
Specify \fIarg\fR progressbar update interval in seconds. The value may be
of 'double' type, e.g. 0.2 or 1.99.
.IP "\fB\-\-config\-file\fR \fIarg\fR (=$HOME/.ccliverc)" 4
.IX Item "--config-file arg (=$HOME/.ccliverc)"
Path to a file to read cclive arguments from.
.SH "OPTIONS \- CONFIGURATION"
.IX Header "OPTIONS - CONFIGURATION"
In addition to the command line, the configurable options may also be read
from the configuration file. See \*(L"\s-1FILES\s0\*(R".
.ie n .IP "\fB\-\-filename\-format\fR \fIarg\fR (=""%t.%s"")" 4
.el .IP "\fB\-\-filename\-format\fR \fIarg\fR (=``%t.%s'')" 4
.IX Item "--filename-format arg (=%t.%s)"
Specify how the downloaded media file should be saved as.
The following specifiers may be used in the \fIarg\fR:
.Sp
.Vb 4
\&  %t .. Media title (after applying \-\-regexp and \-\-subst)
\&  %i .. Media ID
\&  %h .. Media host ID (e.g. "vimeo")
\&  %s .. Media file suffix (e.g. "flv")
.Ve
.Sp
\&\fIAll\fR occurences of the specifier will be replaced. See also
\&\f(CW\*(C`\-\-output\-file\*(C'\fR.
.IP "\fB\-\-output\-dir\fR \fIarg\fR" 4
.IX Item "--output-dir arg"
Write downloaded media to \fIarg\fR directory.
.ie n .IP "\fB \-\-regexp\fR \fIarg\fR (=""/(\ew|\es)/g"")" 4
.el .IP "\fB \-\-regexp\fR \fIarg\fR (=``/(\ew|\es)/g'')" 4
.IX Item " --regexp arg (=/(w|s)/g)"
Use regular expression \fIarg\fR to clean up the media title before it
is used in the filename. The syntax supports both \*(L"i\*(R"
(case-insensitive) and \*(L"g\*(R" (global or \*(L"find all\*(R").
.IP "\fB\-s, \-\-subst\fR \fIarg\fR ..." 4
.IX Item "-s, --subst arg ..."
Use \fIarg\fR substitution regular expression to replace the matched
occurences in the title before it is used in the filename. To use
multiple expressions, separate each in \fIarg\fR with a whitespace.
The syntax supports \*(L"i\*(R" (case-insensitive) and \*(L"g\*(R" (global or
\&\*(L"find all\*(R").
.Sp
The following delimiters may be used:
.Sp
.Vb 1
\&  <> {} () /
.Ve
.Sp
Note:
.Sp
.Vb 2
\&  s/old/new/  .. Invalid
\&  s/old//new/ .. OK
.Ve
.IP "\fB\-\-exec\fR \fIarg\fR" 4
.IX Item "--exec arg"
Invoke \fIarg\fR when download has finished. The following specifiers can
be used in the \fIarg\fR:
.Sp
.Vb 1
\&  %f .. Full path to the downloaded media file
.Ve
.Sp
\&\fIAll\fR occurences of the specifier will be replaced.
.ie n .IP "\fB\-\-agent\fR \fIarg\fR (=""Mozilla/5.0"")" 4
.el .IP "\fB\-\-agent\fR \fIarg\fR (=``Mozilla/5.0'')" 4
.IX Item "--agent arg (=Mozilla/5.0)"
Identify as \fIarg\fR to the \s-1HTTP\s0 servers.
.IP "\fB\-\-proxy\fR \fIarg\fR" 4
.IX Item "--proxy arg"
Use \fIarg\fR for \s-1HTTP\s0 proxy, e.g. \*(L"http://foo:1234\*(R". Overrides the http_proxy
environment setting.
.IP "\fB\-\-throttle\fR \fIarg\fR (=0, disabled)" 4
.IX Item "--throttle arg (=0, disabled)"
Do not exceed the transfer rate of \fIarg\fR (KB/s).
.IP "\fB\-\-connect\-timeout\fR \fIarg\fR (=30)" 4
.IX Item "--connect-timeout arg (=30)"
This option wraps the \s-1CURLOPT_CONNECTTIMEOUT\s0 (libcurl):
.Sp
"Pass a long. It should contain the maximum time in seconds that
you allow the connection to the server to take.
.Sp
This only limits the connection phase, once it has connected,
this option is of no more use. Set to zero to disable connection
timeout (it will then only timeout on the system's internal
timeouts). See also the \s-1CURLOPT_TIMEOUT\s0 option."
\&\*(-- \f(CWcurl_easy_setopt(3)\fR
.IP "\fB\-\-transfer\-timeout\fR \fIarg\fR (=0, disabled)" 4
.IX Item "--transfer-timeout arg (=0, disabled)"
This option wraps the \s-1CURLOPT_TIMEOUT\s0 (libcurl):
.Sp
"Pass a long as parameter containing the maximum time in seconds
that you allow the libcurl transfer operation to take.
.Sp
Normally, name lookups can take a considerable time and limiting
operations to less than a few minutes risk aborting perfectly
normal operations. This option will cause curl to use the
\&\s-1SIGALRM\s0 to enable time-outing system calls."
\&\*(-- \f(CWcurl_easy_setopt(3)\fR
.IP "\fB\-\-dns\-cache\-timeout\fR \fIarg\fR (=60)" 4
.IX Item "--dns-cache-timeout arg (=60)"
This option wraps the \s-1CURLOPT_DNS_CACHE_TIMEOUT\s0 (libcurl):
.Sp
"Pass a long, this sets the timeout in seconds. Name resolves will
be kept in memory for this number of seconds. Set to zero to
completely disable caching, or set to \-1 to make the cached
entries remain forever. By default, libcurl caches this info
for 60 seconds.
.Sp
The name resolve functions of various libc implementations don't
re-read name server information unless explicitly told so
(for example, by calling \f(CWres_init(3)\fR). This may cause libcurl
to keep using the older server even if \s-1DHCP\s0 has updated the
server info, and this may look like a \s-1DNS\s0 cache issue to the
casual libcurl-app user."
\&\*(-- \f(CWcurl_easy_setopt(3)\fR
.IP "\fB\-\-max\-retries\fR \fIarg\fR (=5, 0=disabled)" 4
.IX Item "--max-retries arg (=5, 0=disabled)"
Retry downloading \fIarg\fR times before giving up.
.IP "\fB\-\-retry\-wait\fR \fIarg\fR (=5)" 4
.IX Item "--retry-wait arg (=5)"
Wait \fIarg\fR seconds before retrying after a failed attempt.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.ie n .IP "\fBcclive ""\s-1URL\s0""\fR" 4
.el .IP "\fBcclive ``\s-1URL\s0''\fR" 4
.IX Item "cclive URL"
Typical use.
.ie n .IP "\fBcclive ""\s-1YOUTUBE_URL\s0"" \-f mp4_360p\fR" 4
.el .IP "\fBcclive ``\s-1YOUTUBE_URL\s0'' \-f mp4_360p\fR" 4
.IX Item "cclive YOUTUBE_URL -f mp4_360p"
Same but get the mp4_360p format of the media, instead.
.IP "\fBcclive \-f list youtube\fR" 4
.IX Item "cclive -f list youtube"
Print the supported formats for \*(L"youtube\*(R".
.IP "\fBcclive \-f list yout\fR" 4
.IX Item "cclive -f list yout"
Yields the same results.
.ie n .IP "\fBcclive ""\s-1URL\s0"" \-n\fR" 4
.el .IP "\fBcclive ``\s-1URL\s0'' \-n\fR" 4
.IX Item "cclive URL -n"
Do not download the media, print the details only.
.ie n .IP "\fBecho ""\s-1URL\s0"" | cclive\fR" 4
.el .IP "\fBecho ``\s-1URL\s0'' | cclive\fR" 4
.IX Item "echo URL | cclive"
Read input from the pipeline. Similarly:
.Sp
.Vb 7
\&  % cat >> URLs
\&  URL1
\&  URL2
\&  (^D)
\&  % cclive < URLs
\&  Or:
\&  % cclive URLs
.Ve
.Sp
Separate each \s-1URL\s0 with a newline.
.ie n .IP "\fBcclive ""\s-1URL\s0"" \-s ""s{Alice}{Malice}""\fR" 4
.el .IP "\fBcclive ``\s-1URL\s0'' \-s ``s{Alice}{Malice}''\fR" 4
.IX Item "cclive URL -s s{Alice}{Malice}"
Replace \*(L"Alice\*(R" in the media title with \*(L"Malice\*(R" before it is used in
the filename.
.ie n .IP "\fBcclive ""\s-1URL\s0"" \-s ""s{Alice}<Malice> s{wonderland}<Uberland>i""\fR" 4
.el .IP "\fBcclive ``\s-1URL\s0'' \-s ``s{Alice}<Malice> s{wonderland}<Uberland>i''\fR" 4
.IX Item "cclive URL -s s{Alice}<Malice> s{wonderland}<Uberland>i"
Similar but makes two substitions instead of just one. The former
substitution was explained above, the latter replaces \*(L"Wonderland\*(R"
with \*(L"Uberland\*(R". Note also the \*(L"i\*(R" for case-insensitive.
.Sp
You can use \*(L"g\*(R" for global (or \*(L"find all\*(R"), e.g.:
.Sp
.Vb 1
\&  s{Alice}<Malice>g
.Ve
.ie n .IP "\fBcclive ""\s-1URL\s0"" \-b \-\-log\-file foo.log\fR" 4
.el .IP "\fBcclive ``\s-1URL\s0'' \-b \-\-log\-file foo.log\fR" 4
.IX Item "cclive URL -b --log-file foo.log"
Go to background, redirect output to \f(CW\*(C`foo.log\*(C'\fR.
.ie n .IP "\fBkill \-USR1 \fB$cclive_pid\fB\fR" 4
.el .IP "\fBkill \-USR1 \f(CB$cclive_pid\fB\fR" 4
.IX Item "kill -USR1 $cclive_pid"
Interrupt the current download (of \f(CW$cclive_pid\fR). This makes cclive move
to the next \s-1URL\s0 in the queue (if any).
.SH "FILES"
.IX Header "FILES"
.ie n .IP "\fB\fB$HOME\fB/.ccliverc\fR" 4
.el .IP "\fB\f(CB$HOME\fB/.ccliverc\fR" 4
.IX Item "$HOME/.ccliverc"
You can specify the \fIconfigurable\fR options
(see \*(L"\s-1OPTIONS\s0 \- \s-1CONFIGURATION\s0\*(R") in the configuration file, e.g.:
.Sp
.Vb 6
\& filename\-format = %h_%i_(%t).%s
\& regexp = /(\ew|\epL)/g
\& exec = /usr/bin/vlc %f
\& proxy = http://foo:1234
\& throttle = 10
\& connect\-timeout = 120
.Ve
.Sp
You can also use \f(CW\*(C`\-\-config\-file\*(C'\fR to specify the file.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
cclive exits with 0 on success and >0 if an (unrecoverable) error
occurred.
.SH "DEBUGGING TIPS"
.IX Header "DEBUGGING TIPS"
.IP "\fB\-\-no\-download\fR" 4
.IX Item "--no-download"
Use the \f(CW\*(C`\-\-no\-download\*(C'\fR switch when you don't need to download the
media.
.IP "\fB\-\-verbose\-libcurl\fR" 4
.IX Item "--verbose-libcurl"
Make libcurl verbose.
.IP "\fBDebug symbols\fR" 4
.IX Item "Debug symbols"
Compile cclive with \f(CW\*(C`\-g\*(C'\fR, see also \f(CWgcc(1)\fR.
.IP "\fBOther tools\fR" 4
.IX Item "Other tools"
See also \f(CWgdb(1)\fR, \f(CWstrace(1)\fR and \f(CWvalgrind(1)\fR.
.SH "WWW"
.IX Header "WWW"
<http://cclive.sourceforge.net/>
.SH "AUTHOR"
.IX Header "AUTHOR"
Toni Gundogdu <legatvs at sign gmail com>.
.PP
Thanks to all those who have contributed to the project by sending
patches, reporting bugs and writing feedback. You know who you are.
