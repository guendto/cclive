.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.35
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "cclive 1"
.TH cclive 1 "2009-03-02" "0.2.4" "cclive manual"
.SH "NAME"
cclive \- video extraction utility for the flash dismissing hordes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
cclive [options] [url...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
cclive is command line video extraction utility similar to clive but with
lower requirements. Its features are few and essential. 
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print help and exit.
.IP "\fB\-v, \-\-version\fR" 4
.IX Item "-v, --version"
Print version and exit.
.IP "\fB\-\-supported\-hosts\fR" 4
.IX Item "--supported-hosts"
Print a list of supported hosts to stdout and exit.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Turn off all output.
.IP "\fB\-\-debug\fR" 4
.IX Item "--debug"
Print libcurl debug messages to stderr.
.IP "\fB\-n, \-\-no\-extract\fR" 4
.IX Item "-n, --no-extract"
Do not extract any videos.
.IP "\fB\-c, \-\-continue\fR" 4
.IX Item "-c, --continue"
Resume a partially downloaded video file. May not work with some of the \s-1HTTP\s0
servers. Be sure to read the \*(L"\s-1FORMATS\s0\*(R" section.
.IP "\fB\-f, \-\-download=\fR\fI\s-1FORMAT\s0\fR" 4
.IX Item "-f, --download=FORMAT"
Extract \fIformat\fR instead of the default \*(L"flv\*(R". Possible values are \*(L"flv\*(R"
(default), \*(L"mp4\*(R", \*(L"3gpp\*(R", \*(L"xflv\*(R", \*(L"spark\*(R", \*(L"vp6\-hq\*(R", \*(L"vp6\-hd\*(R", \*(L"vp6\*(R",
\&\*(L"h264\*(R", \*(L"spak\-mini\*(R". Note that only certain hosts support only certain
formats. See the \*(L"\s-1FORMATS\s0\*(R" section for more on this.
.IP "\fB\-O, \-\-output\-video=\fR\fI\s-1FILE\s0\fR" 4
.IX Item "-O, --output-video=FILE"
Write extracted video to \fIfile\fR. Do \fInot\fR use this when extracting multiple
videos on one go. Causes \fBcclive\fR to overwrite an already existing file.
.IP "\fB\-N, \-\-number\-videos\fR" 4
.IX Item "-N, --number-videos"
Number extracted video files. Causes \fBcclive\fR to add a numeric prefix to
the file names. Typically used for extracting multipart videos to keep them
in order.
.IP "\fB\-\-emit\-csv\fR" 4
.IX Item "--emit-csv"
Emit video details as \s-1CSV\s0 to stdout. Implies \fB\-\-no\-extract\fR. Note that
\&\fB\-\-quiet\fR has \fIno\fR effect on the emitted \s-1CSV\s0.
.IP "\fB\-\-limit\-rate=\fR\fI\s-1AMOUNT\s0\fR" 4
.IX Item "--limit-rate=AMOUNT"
Limit download speed to \fIamount\fR (KB/s). Limits only file transfers.
.IP "\fB\-\-agent=\fR\fI\s-1STRING\s0\fR" 4
.IX Item "--agent=STRING"
Identify \fBcclive\fR as \fIstring\fR to the \s-1HTTP\s0 servers.
.IP "\fB\-\-proxy=\fR\fI\s-1ADDRESS\s0\fR" 4
.IX Item "--proxy=ADDRESS"
Use \fIaddress\fR for \s-1HTTP\s0 proxy. By default \fBcclive\fR uses the value of the
http_proxy environment variable if it is defined. Example: http://foo:1234.
.IP "\fB\-\-no\-proxy\fR" 4
.IX Item "--no-proxy"
Do not use proxy, even if http_proxy environment variable is defined.
.IP "\fB\-u, \-\-youtube\-user=\fR\fI\s-1USERNAME\s0\fR" 4
.IX Item "-u, --youtube-user=USERNAME"
Causes \fBcclive\fR to log into Youtube as \fIusername\fR. This is done \fIbefore\fR
extraction, even if the batch does not contain any Youtube hosted links.
.IP "\fB\-p, \-\-youtube\-pass=\fR\fI\s-1PASSWORD\s0\fR" 4
.IX Item "-p, --youtube-pass=PASSWORD"
Use \fIpassword\fR for Youtube login.  If undefined, \fBcclive\fR prompts for it.
.IP "\fB\-\-exec=\fR\fI\s-1COMMAND\s0\fR\fB;\fR" 4
.IX Item "--exec=COMMAND;"
Execute \fIcommand\fR. Optional arguments may be passed to the command.
The expression must be terminated by a semicolon (\*(L";\*(R"). If the specifier
\&\*(L"%i\*(R" appears anywhere in \fIcommand\fR name or the arguments it is replaced
by the pathname of the extracted video file.
.Sp
Example:
  % cclive \-\-exec=\*(L"mplayer \-real\-quiet \f(CW%i\fR;\*(R" \s-1URL\s0
.IP "\fB\-\-exec=\fR\fI\s-1COMMAND\s0\fR\fB+\fR" 4
.IX Item "--exec=COMMAND+"
Same as \fB\-\-exec\fR, except that \*(L"%i\*(R" is replaced with as many pathnames
as possible for the invocation of \fIcommand\fR.
.IP "\fB\-\-stream\-exec=\fR\fI\s-1COMMAND\s0\fR" 4
.IX Item "--stream-exec=COMMAND"
Execute \fIcommand\fR when file transfer reaches \fIpercent\fR done defined
with the \fB\-\-stream\fR option. The \*(L"%i\*(R" specifier for video pathname is
expected to appear somewhere in the \fIcommand\fR expression.
.Sp
Unlike the \fB\-\-exec\fR option which is executed subsequently, \fBcclive\fR
forks the streaming process and continues with the file transfer.
.Sp
It should also be noted that \fBcclive\fR makes no effort to check whether
there's enough data to be streamed. It assumes the user knows how much
data needs to be buffered before starting the process. Similarly, if the
transfer rate drops significantly after starting the process and the
forked process runs out of data, \fBcclive\fR simply ignores this.
.Sp
Some players and formats may not work properly. Use \fImplayer\fR\|(1) and choose
flv if you are unsure. These have proven to be fairly reliable.
.IP "\fB\-\-stream=\fR\fI\s-1PERCENT\s0\fR" 4
.IX Item "--stream=PERCENT"
Execute the \fIcommand\fR defined with the \fB\-\-stream\-exec\fR option when the
file transfer reaches \fIpercent\fR done.
.Sp
Example:
  % cclive \-\-stream\-exec=\*(L"mplayer \-real\-quiet \f(CW%i\fR\*(R" \-\-stream=20 \s-1URL\s0
.IP "\fB\-\-print\-fname\fR" 4
.IX Item "--print-fname"
Print output filename on a dedicated line before file transfer starts.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Typical use:
  % cclive \s-1URL\s0
.PP
Extract mp4 format video from the \s-1URL:\s0
  % cclive \-f mp4 \s-1URL\s0
.PP
Play extracted video with \fImplayer\fR\|(1) subsequently:
  % cclive \-\-exec=\*(L"mplayer \-really\-quiet \f(CW%i\fR;\*(R" \s-1URL\s0
.PP
Extract audio from the downloaded video and save it as mp3
using \fIffmpeg\fR\|(1):
  % cclive \-\-exec=\*(L"ffmpeg \-i \f(CW%i\fR \f(CW%i\fR.mp3;\*(R" \s-1URL\s0
.PP
Start streaming the video being extracted with \fImplayer\fR\|(1)
when the file transfer reaches 20% done:
  % cclive \-\-stream\-exec=\*(L"mplayer \-really\-quiet \f(CW%i\fR\*(R" \-\-stream=20 \s-1URL\s0
.SH "FORMATS"
.IX Header "FORMATS"
.Vb 4
\&  youtube.com
\&    * flv/mp4/3gpp/xflv
\&    * Resuming flv with --continue does not work
\&    * 3gpp and xflv formats may not always be available
.Ve
.PP
.Vb 5
\&  video.google.com
\&    * flv/mp4
\&    * Resuming flv with --continue does not work
\&    * mp4 format may not always be available
\&    * mp4 != youtube-mp4
.Ve
.PP
.Vb 2
\&  break.com
\&    * flv
.Ve
.PP
.Vb 2
\&  evisor.tv
\&    * flv
.Ve
.PP
.Vb 2
\&  sevenload.com
\&    * flv
.Ve
.PP
.Vb 2
\&  liveleak.com
\&    * flv
.Ve
.PP
.Vb 4
\&  dailymotion.com
\&    * spark / spak-mini / vp6-hq / vp6-hd / vp6 / h264
\&    * spark is the "regular" 320x240 flv
\&    * cclive defaults to spark if format is not available
.Ve
.SH "FILES"
.IX Header "FILES"
.IP "\fB$HOME/.ccliverc\fR, for example:" 4
.IX Item "$HOME/.ccliverc, for example:"
.Vb 6
\& agent = Furball/1.0
\& proxy = http://foo:1234
\& limit-rate = 50 # KB/s
\& # NOTE: in theory any command-line option can be defined
\& # in the config file. Command-line option overrides config
\& # file definition.
.Ve
.SH "OTHER"
.IX Header "OTHER"
Send questions, patches and bug reports to:
  cclive@googlegroups.com
.PP
To subscribe, send an email to:
  cclive\-subscribe@googlegroups.com
.PP
List archive:
  http://groups.google.com/group/cclive
.PP
You can obtain the development repository with:
  % git clone git://repo.or.cz/cclive.git
.PP
For release announcements, subscribe to the
project at:
  http://freshmeat.net/projects/cclive
.SH "AUTHOR"
.IX Header "AUTHOR"
Toni Gundogdu <legatvs@gmail.com>
