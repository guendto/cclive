
Or "HOWTO-AddSupportForNewWebsite".

The general idea
----------------

cclive fetches and parses video page contents for various details
and constructs the video download link from these details.

Currently the following details are gathered video each video page link:

  * video id
  * video title
  * video link


Programming is easy, data mining isn't
--------------------------------------

The above steps can vary greatly for each website. See src/evisor.cpp
and src/liveleak.cpp for an example of this.

Sometimes extra steps are necessary:
  http://code.google.com/p/clive/issues/detail?id=6#c7


Implementing new support
------------------------

  * src/Makefile.am
    - append $host.cpp to "host"

Run "autoreconf" at this point.

  * src/hosthandler.h
    - add new $HostHandler class derived from HostHandler

  * src/hostfactory.h
    - add new $Host enum to the list

  * src/hostfactory.cpp
    - add the new enum case to createHandler switch

  * src/$host.cpp
    - add implementation file for $HostHandler class
    - see others (e.g. src/youtube.cpp) for examples

  * tests/$host.c
    - implement test case, see others (e.g. tests/youtube.c)

  * tests/Makefile.am
    - append tests/$host.c to check_PROGRAMS
    - add $host_SOURCES= $host.c $(common)

Run "autoreconf" && ./configure (options).


Testing
-------

Depending on changes that you have made or make, re-running "autoreconf" and
"configure" may be required.

  * make && ./src/cclive $test_link -n
    - tests the new host

  * make check
    - runs the tests/$host.c


Submitting
----------

See SubmittingPatches file.
