.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "cclive 1"
.TH cclive 1 "2010-08-31" "0.7.0b1" "cclive manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cclive \- video download tool
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
cclive [options] [url...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
cclive is a command line tool for downloading videos from
Youtube and similar websites that require flash for viewing.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Print version and exit.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Print help and exit.
.IP "\fB\-\-license\fR" 4
.IX Item "--license"
Print license and exit.
.IP "\fB\-\-support\fR" 4
.IX Item "--support"
Print supported websites and video formats and exit.
.IP "\fB\-\-verbose\-libcurl\fR" 4
.IX Item "--verbose-libcurl"
Turn on libcurl verbose output.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Omit output to standard output/error.
.IP "\fB\-b, \-\-background\fR" 4
.IX Item "-b, --background"
Go to background after startup. Output will be written to
the file specified with \f(CW\*(C`\-\-log\-file\*(C'\fR.
.IP "\fB\-f, \-\-format\fR=\fIarg\fR" 4
.IX Item "-f, --format=arg"
Download \fIarg\fR format of the video.
.IP "\fB\-c, \-\-continue\fR" 4
.IX Item "-c, --continue"
Resume partially downloaded file.
.IP "\fB\-W, \-\-overwrite\fR" 4
.IX Item "-W, --overwrite"
Overwrite existing file.
.IP "\fB\-O, \-\-output\-file\fR=\fIarg\fR" 4
.IX Item "-O, --output-file=arg"
Write video to \fIarg\fR file.
.IP "\fB\-n, \-\-no\-download\fR" 4
.IX Item "-n, --no-download"
Do not download the video. Display details only.
.IP "\fB\-\-no\-proxy\fR" 4
.IX Item "--no-proxy"
Do not use \s-1HTTP\s0 proxy at all. libcurl will not use http_proxy defined
value either.
.IP "\fB\-\-log\-file\fR=\fIarg\fR" 4
.IX Item "--log-file=arg"
Write log data to \fIarg\fR file. Ignored unless \f(CW\*(C`\-\-background\*(C'\fR is used.
Overwrites the existing file. Default is \*(L"cclive_log\*(R". See also
\&\f(CW\*(C`\-\-background\*(C'\fR and \f(CW\*(C`\-\-update\-interval\*(C'\fR.
.IP "\fB\-\-update\-interval\fR=\fIarg\fR" 4
.IX Item "--update-interval=arg"
Specify \fIarg\fR progressbar update interval. Default is 1 second.
You can use double type values, e.g. 0.2 or 1.99.
.IP "\fB\-\-config\-file\fR=\fIarg\fR" 4
.IX Item "--config-file=arg"
Path to a file to read cclive arguments from. The default is \*(L"~/.ccliverc\*(R".
.SH "OPTIONS \- CONFIGURATION"
.IX Header "OPTIONS - CONFIGURATION"
You can specify these options in the configuration file.
.IP "\fB\-\-filename\-format\fR=\fIarg\fR" 4
.IX Item "--filename-format=arg"
Use \fIarg\fR to specify video output filename. The default is \*(L"%t.%s\*(R".
cclive supports the following specifiers:
  \f(CW%t\fR    video title
  \f(CW%i\fR    video id
  \f(CW%h\fR    video host id
  \f(CW%s\fR    video file suffix
.IP "\fB\-r, \-\-regexp\fR=\fIarg\fR" 4
.IX Item "-r, --regexp=arg"
Use \fIarg\fR regular expression to clean up the video title before
it is used in the filename. The default is \*(L"/(\ew|\epL|\es)/g\*(R".
Supports \*(L"i\*(R" (case-insensitive) and \*(L"g\*(R" (global, find all).
.IP "\fB\-s, \-\-subst\fR=\fIarg\fR ..." 4
.IX Item "-s, --subst=arg ..."
Use \fIarg\fR substitution regular expression to replace the matched
occurences in the title before it is used in the filename. More than
one expression can be specified in \fIarg\fR if each is separated by a
whitespace. Supports \*(L"i\*(R" (case-insensitive) and \*(L"g\*(R" (global, find all).
.Sp
You can use the following delimiters:
  <> {} () /
.Sp
Please make a note that, cclive currently considers:
  s/old/new/    Invalid
  s/old//new/   \s-1OK\s0
.IP "\fB\-\-exec\fR=\fIarg\fR" 4
.IX Item "--exec=arg"
Invoke \fIarg\fR after video download finishes. cclive recognizes the
following specifiers in the \fIarg\fR:
  \f(CW%f\fR    full path to the downloaded video file
.IP "\fB\-\-proxy\fR=\fIarg\fR" 4
.IX Item "--proxy=arg"
Use \fIarg\fR for \s-1HTTP\s0 proxy, e.g. \*(L"http://foo:1234\*(R". Note that libcurl,
which cclive uses, will use http_proxy value if defined. See also
\&\f(CW\*(C`\-\-no\-proxy\*(C'\fR.
.IP "\fB\-\-throttle\fR=\fIarg\fR" 4
.IX Item "--throttle=arg"
Limit download transfer rate to \fIarg\fR KB/s. Default is zero (disabled).
.IP "\fB\-\-connect\-timeout\fR=\fIarg\fR" 4
.IX Item "--connect-timeout=arg"
This option wraps the \s-1CURLOPT_CONNECTTIMEOUT\s0 (libcurl). Default is 30.
.Sp
.Vb 2
\&  "Pass a long. It should contain the maximum time in seconds that
\&  you allow the connection to the server to take.
\&
\&  This only limits the connection phase, once it has connected,
\&  this option is of no more use. Set to zero to disable connection
\&  timeout (it will then only timeout on the system\*(Aqs internal
\&  timeouts). See also the CURLOPT_TIMEOUT option."
\&        \-\- C<curl_easy_setopt(3)>
.Ve
.IP "\fB\-\-transfer\-timeout\fR=\fIarg\fR" 4
.IX Item "--transfer-timeout=arg"
This option wraps the \s-1CURLOPT_TIMEOUT\s0 (libcurl). Default is zero (disabled).
.Sp
.Vb 2
\&  "Pass a long as parameter containing the maximum time in seconds
\&  that you allow the libcurl transfer operation to take.
\&
\&  Normally, name lookups can take a considerable time and limiting
\&  operations to less than a few minutes risk aborting perfectly
\&  normal operations. This option will cause curl to use the
\&  SIGALRM to enable time\-outing system calls."
\&        \-\- C<curl_easy_setopt(3)>
.Ve
.IP "\fB\-\-dns\-cache\-timeout\fR=\fIarg\fR" 4
.IX Item "--dns-cache-timeout=arg"
This option wraps the \s-1CURLOPT_DNS_CACHE_TIMEOUT\s0 (libcurl). Default is 60.
.Sp
.Vb 5
\&  "Pass a long, this sets the timeout in seconds. Name resolves will
\&  be kept in memory for this number of seconds. Set to zero to
\&  completely disable caching, or set to \-1 to make the cached
\&  entries remain forever. By default, libcurl caches this info
\&  for 60 seconds.
\&
\&  The name resolve functions of various libc implementations don\*(Aqt
\&  re\-read name server information unless explicitly told so
\&  (for example, by calling C<res_init(3)>). This may cause libcurl
\&  to keep using the older server even if DHCP has updated the
\&  server info, and this may look like a DNS cache issue to the
\&  casual libcurl\-app user." \-\- C<curl_easy_setopt(3)>
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.ie n .IP "\fBcclive ""http://www.youtube.com/watch?v=DeWsZ2b_pK4""\fR" 4
.el .IP "\fBcclive ``http://www.youtube.com/watch?v=DeWsZ2b_pK4''\fR" 4
.IX Item "cclive http://www.youtube.com/watch?v=DeWsZ2b_pK4"
Typical use.
.ie n .IP "\fBcclive ""http://www.youtube.com/watch?v=DeWsZ2b_pK4"" \-f sd_270p\fR" 4
.el .IP "\fBcclive ``http://www.youtube.com/watch?v=DeWsZ2b_pK4'' \-f sd_270p\fR" 4
.IX Item "cclive http://www.youtube.com/watch?v=DeWsZ2b_pK4 -f sd_270p"
Same but get the sd_270p (Youtube specific) format instead. See
\&\f(CW\*(C`\-\-support\*(C'\fR for a complete list of websites and formats.
.ie n .IP "\fBcclive ""http://www.youtube.com/watch?v=DeWsZ2b_pK4"" \-n\fR" 4
.el .IP "\fBcclive ``http://www.youtube.com/watch?v=DeWsZ2b_pK4'' \-n\fR" 4
.IX Item "cclive http://www.youtube.com/watch?v=DeWsZ2b_pK4 -n"
Do not download the video file. Dump the video details only.
.ie n .IP "\fBecho ""http://www.youtube.com/watch?v=DeWsZ2b_pK4"" | cclive\fR" 4
.el .IP "\fBecho ``http://www.youtube.com/watch?v=DeWsZ2b_pK4'' | cclive\fR" 4
.IX Item "echo http://www.youtube.com/watch?v=DeWsZ2b_pK4 | cclive"
Another way to feed cclive with an \s-1URL\s0. You can specify multiple URLs
as long as each is separated by a newline. So for example, you could
place a number of URLs to a file and then \f(CW\*(C`cclive < url.lst\*(C'\fR.
.ie n .IP "\fBcclive ""\s-1URL\s0"" \-s ""s{Alice}{Malice}""\fR" 4
.el .IP "\fBcclive ``\s-1URL\s0'' \-s ``s{Alice}{Malice}''\fR" 4
.IX Item "cclive URL -s s{Alice}{Malice}"
Replace \*(L"Alice\*(R" in the video title with \*(L"Malice\*(R" before using it in the
filename.
.ie n .IP "\fBcclive ""\s-1URL\s0"" \-s ""s{Alice}<Malice> s{wonderland}<Uberland>i""\fR" 4
.el .IP "\fBcclive ``\s-1URL\s0'' \-s ``s{Alice}<Malice> s{wonderland}<Uberland>i''\fR" 4
.IX Item "cclive URL -s s{Alice}<Malice> s{wonderland}<Uberland>i"
Similar but makes two substitions, the former was explained above, the latter
replaces \*(L"Wonderland\*(R" with \*(L"Uberland\*(R". Note the use of \*(L"i\*(R" (case-insensitive).
.Sp
You can use \*(L"g\*(R" for global (find all), e.g. if you wanted to replace all of
the \*(L"Alice\*(R" occurences with \*(L"Malice\*(R", you could use \*(L"s{Alice}<Malice>g\*(R".
.SH "FILES"
.IX Header "FILES"
.ie n .IP "\fB\fB$HOME\fB/.ccliverc\fR" 4
.el .IP "\fB\f(CB$HOME\fB/.ccliverc\fR" 4
.IX Item "$HOME/.ccliverc"
You can specify the configurable options (see \*(L"\s-1OPTIONS\s0 \- \s-1CONFIGURATION\s0\*(R")
in this file, e.g.:
.Sp
.Vb 6
\& filename\-format = %h_%i_(%t).%s
\& regexp = /(\ew|\epL)/g
\& exec = /usr/bin/vlc %f
\& proxy = http://foo:1234
\& throttle = 10
\& connect\-timeout = 120
.Ve
.Sp
Note that you can also specify this file with \f(CW\*(C`\-\-config\-file\*(C'\fR.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
cclive exits with 0 on success and >0 if an error occurred.
There are no plans to introduce a series of different return values
to the program. You may try \f(CWquvi(1)\fR for this if that's what
you need.
.SH "MANGLED CHARACTERS"
.IX Header "MANGLED CHARACTERS"
Check your terminal settings for an invalid locale setting. You can get
a list of the available locale names with \f(CW\*(C`locale \-a\*(C'\fR. Make sure your
terminal supports unicode. e.g.:
  % LANG=en_US.UTF8 urxvt&
  % cclive ... # in the new opened terminal
.PP
libquvi (which cclive uses) converts the characters to unicode if the
parsed data contains the charset meta tag. Otherwise the characters are
copied from the original context as they are without any conversion.
.SH "MISSING UNICODE CHARACTERS"
.IX Header "MISSING UNICODE CHARACTERS"
Missing unicode characters are likely result of invalid use of \f(CW\*(C`\-\-regexp\*(C'\fR.
Check that the \f(CW\*(C`\-\-regexp\*(C'\fR contains \*(L"\epL\*(R". cclive uses libpcre for regular
expressions, the \*(L"\epL\*(R" is specific to \s-1PCRE\s0.
.PP
\&\*(L"In \s-1UTF\-8\s0 mode, characters with values greater than 128 never match \ed,
\&\es, or \ew, and always match \eD, \eS, and \eW. This is true even when Unicode 
character property support is available. These sequences retain their original
meanings from before \s-1UTF\-8\s0 support was available, mainly for efficiency
reasons. Note that this also affects \eb, because it is defined in
terms of \ew and \eW.\*(R" \*(-- \f(CWpcrepattern(3)\fR
.SH "CONTRIBUTING"
.IX Header "CONTRIBUTING"
.IP "\fBAdd support for another website\fR" 4
.IX Item "Add support for another website"
Refer to the libquvi <http://quvi.googlecode.com/> documentation instead.
On most systems, you can find the READMEs and HOWTOs in \f(CW$prefix\fR/share/quvi
and \f(CW$prefix\fR/share/doc/quvi directories, source tarballs and at:
    <http://repo.or.cz/w/quvi.git/tree/HEAD:/doc>
    <http://repo.or.cz/w/quvi.git/tree/HEAD:/share/lua>
    <http://repo.or.cz/w/quvi.git/tree/HEAD:/share/lua/website>
.IP "\fBSubmitting patches\fR" 4
.IX Item "Submitting patches"
If you have cooked up a patch, please submit it to the tracker (see \*(L"\s-1BUGS\s0\*(R").
.SH "BUGS"
.IX Header "BUGS"
.IP "\fBInstructions, read carefully\fR" 4
.IX Item "Instructions, read carefully"
<http://code.google.com/p/cclive/wiki/ReportingIssues>
.IP "\fBTracker\fR" 4
.IX Item "Tracker"
<http://code.google.com/p/cclive/issues/list/>
.SH "DEBUGGING TIPS"
.IX Header "DEBUGGING TIPS"
.IP "\fB\-\-no\-download\fR" 4
.IX Item "--no-download"
Use the \f(CW\*(C`\-\-no\-download\*(C'\fR switch if you don't need to download the video.
.IP "\fBVerbose libcurl\fR" 4
.IX Item "Verbose libcurl"
Use the \f(CW\*(C`\-\-verbose\-libcurl\*(C'\fR switch, while debugging network related issues.
.IP "\fBDebug symbols\fR" 4
.IX Item "Debug symbols"
Compile cclive with \f(CW\*(C`\-g\*(C'\fR (see \f(CW\*(C`g++(1)\*(C'\fR) for debug symbols.
.IP "\fBOther tools\fR" 4
.IX Item "Other tools"
See if other tools, such as, \f(CWstrace(1)\fR, \f(CWgdb(1)\fR and \f(CWvalgrind(1)\fR
are any further help.
.SH "OTHER"
.IX Header "OTHER"
.IP "\fBProject:\fR" 4
.IX Item "Project:"
<http://cclive.googlecode.com/>
.IP "\fBDevelopment repository:\fR" 4
.IX Item "Development repository:"
<git://repo.or.cz/cclive.git>
.Sp
e.g. git clone git://repo.or.cz/cclive.git
.SH "AUTHOR"
.IX Header "AUTHOR"
Toni Gundogdu <legatvs gmail com>. See also \*(L"\s-1BUGS\s0\*(R", \*(L"\s-1DEBUGGING\s0 \s-1TIPS\s0\*(R"
and \*(L"\s-1CONTRIBUTING\s0\*(R".
