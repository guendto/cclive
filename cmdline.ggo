
defgroup "Output"
defgroup "HTTP"
defgroup "Download"
defgroup "Subsequent"
defgroup "Streaming"
defgroup "Regular expression"

option "version"
    v "print version and exit"
    optional
option "hosts"
    - "list supported hosts"
    optional

groupoption "quiet"
    q "turn off all output"
    optional
    group="Output"
groupoption "debug"
    - "show curl debug messages"
    optional
    group="Output"
groupoption "emit-csv"
    - "emit video details as csv to stdout"
    optional
    group="Output"
groupoption "print-fname"
    - "print output filename on a single line"
    optional
    group="Output"

groupoption "agent"
    - "identify as string"
    string typestr="string"
    no
    default="Mozilla/5.0"
    group="HTTP"
groupoption "proxy"
    - "use specified proxy"
    string typestr="proxyhost[:port]"
    no
    group="HTTP"
groupoption "no-proxy"
    - "do not use proxy even if http_proxy is defined"
    optional
    group="HTTP"
groupoption "connect-timeout"
    - "max time allowed connection to server take"
    int typestr="seconds"
    default="30"
    optional
    group="HTTP"
groupoption "connect-timeout-socks"
    - "identical but tries to work around SOCKS proxy bug in libcurl"
    int typestr="s"
    default="30"
    optional
    group="HTTP"

groupoption "no-extract"
    n "do not actually extract video, simulate only"
    optional
    group="Download"
groupoption "continue"
    c "resume partially downloaded file"
    optional
    group="Download"
groupoption "limit-rate"
    l "limit download speed to KB/s"
    int typestr="kb/s"
    optional
    group="Download"
groupoption "output-video"
    O "write video to file"
    string typestr="file"
    no
    group="Download"
groupoption "number-videos"
    N "prepend a numeric prefix to output filenames"
    optional
    group="Download"
groupoption "filename-format"
    F "use output filename format"
    string typestr="string"
    default="%t.%s"
    no
    group="Download"
groupoption "format"
    f "download video format"
    values="flv","best",
        # youtube:
        "fmt17","fmt18","fmt22","fmt35","hq","3gp",
        # dmotion:
        "spark-mini","vp6-hq","vp6-hd","vp6","h264",
        # vimeo:
        "hd",
        # google:
        "mp4",
        # golem:
        "high", "ipod"
    default="flv"
    typestr="format"
    optional
    group="Download"

groupoption "exec"
    - "command to invoke when transfer finishes"
    string typestr="expr[;|+]"
    optional
    group="Subsequent"
groupoption "exec-run"
    e "invoke command defined with --exec"
    optional
    dependon="exec"
    group="Subsequent"

groupoption "stream-exec"
    - "stream command to be invoked"
    string typestr="expr"
    optional
    group="Streaming"
groupoption "stream-pass"
    s "pass video link to --stream-exec command"
    optional
    dependon="stream-exec"
    group="Streaming"
groupoption "stream"
    - "invoke --stream-exec when transfer reaches %"
    int typestr="percent"
    optional
    dependon="stream-exec"
    group="Streaming"

groupoption "regexp"
    r "regular expression to filter video title"
    string typestr="expr"
    group="Regular expression"
    optional
groupoption "find-all"
    g "use repeated matching to find all occurences, like Perl's /g option"
    optional
    dependon="regexp"
    group="Regular expression"
