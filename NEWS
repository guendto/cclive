cclive News
-----------

0.6.1
-------------

--format no longer uses hardcoded values. The accepted
values are now provided by libquvi.


0.6.0
-------------

Significant changes to the project. 0.6.0 has gone through
tedious testing but expect bugs.

* Added new dependency for libquvi (http://quvi.googlecode.com/)
  - libquvi is a brand new a spinoff library
  - based on cclive 0.5 host specific code
  - takes care of all of the page fetching and parsing

* cclive will now prepend "error: libquvi:" if an error occurs
in the library, this means that any such bug should be reported
to the *quvi bug tracker* (see the link above)

* Added support for (cctv) multi-segment videos, see also:
  http://code.google.com/p/clive/issues/detail?id=45

* Adult websites are now only supported if libquvi was built
with the support (default:no)

* CCLIVE_CURLINIT return code is now obsolete, libquvi
initializes libcurl and spews out the init error

* The code responsible for the underlaying "retry-transfer"
logic was rewritten for better readability

* Removed the libiconv dependency, libquvi takes care of
the character set conversions now

* Tests no longer run any of the old host specific checks,
the quvi package takes care of this now, other changes
to the test suite include:

  * ADULT_OK environment variable is now obsolete,
  this is now libquvi territory

  * Renamed CCLIVE_TEST_OPTS -> CCLIVE_TEST_OPTIONS

  * Tests are now perl scripts

  * See INSTALL file for the list of test suite supported
  environment variables

* libquvi introduces some misc. minor improvements to the 
page fetching and parsing, e.g. spiegel videos now skip
the video page fetch altogether

* Spyfilms video ids were previously (0.5.9) glued together
from various video page elements, as of 0.6.0 (and libquvi)
spyfilms video ids are generated using different scheme

  * This is a special case, all other supported websites
  use unique ids for their videos

* Option changes

  * Remove --stream option. This option was supported for historical
  reasons only, until now. It has been considered deprecated since
  the introduction of --stream-pass in 0.4.6.


0.5.7
-------------

Multiple regular expressions can now be supplied for --substitute.

For example:
  % cclive -S "s/old/new/i s/[/:-]/_/g" URL

Note the whitespace between the regular expressions.


0.5.6
-------------

Added --substitute which mimics Perl's s/old/new/(gi) substitution.
It can be used to replace substrings in output filenames.

Example:
  % cclive -S "s/old/new/i" URL
  % cclive -S "s/[/:-]/_/g" URL

Changed --regexp to accept Perl-like regular expressions, e.g.
  % cclive -r "/(\w+)/" URL
  % cclive -r "/(\w+)/g" URL
  % cclive -r "/([a-e])/gi" URL

Note that this breaks the backward compatibility.
  * --regexp now expects /pattern/(gi)
  * --find-all is no longer supported (use /g instead)

Added --background which is similar to what clive (2.1.x) once had.
The progress indication while in the background is very simplistic.
Note that --logfile and --logfile-interval options were also added
to support --background.


0.5.2
-------------

New youtube format: fmt34. This was previously referred to as youtube
default format which no longer appears to be the case. Note that the
fmt34 video quality and resolution may vary.

Fixes a few bugs.

Redtube support is broken.
  http://code.google.com/p/cclive/issues/detail?id=5


0.5.0
-------------

The dependency of Perl and HTML::Tokenizer module have been replaced with
libiconv and PCRE for significantly lower system footprint. Perl was previously
used for parsing video titles and cleaning them up.

configure no longer supports --enable-sigwinch. The support is now compiled
into the program automatically if signal.h is found and defines SIGWINCH.

tests/ have been rewritten in C++.

Other notable changes:

  Removed options:
  --title
    - obsoleted by --filename-format since 0.4.1 
  --cclass, --no-cclass
    - obsoleted by --regexp and --find-all (below)

  New options:
  -r, --regexp
    - Defines the regular expression that can be used to "filter"
      video titles before they are used for filenames

  -g, --find-all
    - Used together with the above to repeat the matching to find
      all occurences, similar to Perl's /g option

  Example:
    cclive -gr "(\w|\s)" URL

  Comparison:
  -----------
                              SIZE     RES      Notes
  clive  2.2.4              ~13924k  ~10388k    Perl all the way
  cclive 0.4.7 (w/ perl)     ~8300k   ~6908k    Video titles enabled
  cclive 0.4.7 (w/o perl)    ~5940k   ~3224k    No video titles
  cclive 0.5.0               ~5780k   ~3196k    Video titles enabled by default

  SIZE = total size of the process (text, data, and stack)
  RES  = current amount of resident memory

  Note  : Figures are approximates. cclive was built with "-O2 -march=pentium4"
  Tested: FreeBSD 7.2, numbers provided by top(1), numbers vary slightly per URL
